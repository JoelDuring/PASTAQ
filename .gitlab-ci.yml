image: ubuntu:latest

variables:
    DOCKER_DRIVER: btrfs

stages:
    - build
    - test
    - lint

cache:
    key: "$CI_PROJECT_PATH_SLUG $CI_COMMIT_SHA"
    paths:
        - apt-cache/

before_script:
    # Configure gitlab runner credentials.
    - echo -e "machine 129.125.166.241
        login gitlab-ci-token
        password ${CI_JOB_TOKEN}" > ~/.netrc
    # Transform local submodules into relative paths.
    - sed -i "s/http:\\/\\/129.125.166.241\\//..\\/..\\//g" .gitmodules
    - sed -i "s/git@129.125.166.241:/..\\/..\\//g" .gitmodules
    # Install required packages.
    - export APT_CACHE_DIR=apt-cache && mkdir -pv $APT_CACHE_DIR
    - apt-get -y -qq update
    - apt-get -qq -o dir::cache::archives="$APT_CACHE_DIR" -y install
        cmake ninja-build build-essential git gcc-8 g++-8
        clang-format clang-tidy cppcheck > /dev/null
    - update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 700 --slave /usr/bin/g++ g++ /usr/bin/g++-7
    - update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 800 --slave /usr/bin/g++ g++ /usr/bin/g++-8
    # Initialize submodules.
    - git submodule sync
    - git submodule update --init

build:linux:
    stage: build
    script:
        # Perform build.
        - mkdir -p build
        - cd build
        - cmake .. -G Ninja
        - ninja
    artifacts:
        when: on_success
        expire_in: 1 day
        paths:
            - build/

test:linux:
    stage: test
    script:
        # Start test
        - cd build
        - ninja test
    dependencies:
        - build:linux

lint:clang-format:
    stage: lint
    script:
        - if (clang-format $(find */src */tests -name "*.[ch]pp") -output-replacements-xml | grep -c "<replacement " >/dev/null); then
            echo "Linter errors found, please run clang-format and try again";
            exit 1;
          fi
    dependencies: []

lint:cppcheck:
    stage: lint
    script:
        - cppcheck --enable=all --suppress=unusedFunction --quiet */src/*/*.cpp 
        - if [[ $(wc -l < cppcheck.txt) -gt 1 ]]; then
            echo "cppcheck errors found:";
            cat cppcheck.txt;
            exit 1;
          fi
    dependencies: []

lint:clang-tidy:
    stage: lint
    script:
        - clang-tidy -quiet -checks="-*,bugprone-*,cert-*,clang-analyzer-*,cppcoreguidelines-*,misc-*,modernize-*,mpi-*,performance-*,readability-*,hicpp-*,cert-*,-cppcoreguidelines-pro-type-reinterpret-cast,-cppcoreguidelines-pro-bounds-constant-array-index,-cppcoreguidelines-pro-bounds-pointer-arithmetic,-readability-implicit-bool-conversion,-hicpp-signed-bitwise,-hicpp-use-noexcept,-misc-unused-parameters,-modernize-use-noexcept" -p=build */src/*
    dependencies:
        - build:linux
